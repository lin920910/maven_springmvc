<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:p="http://www.springframework.org/schema/p" 
	xmlns:task="http://www.springframework.org/schema/task"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx" 
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:cache="http://www.springframework.org/schema/cache"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans.xsd  
	http://www.springframework.org/schema/task
    http://www.springframework.org/schema/task/spring-task.xsd 
	http://www.springframework.org/schema/aop 
	http://www.springframework.org/schema/aop/spring-aop.xsd 
	http://www.springframework.org/schema/tx 
	http://www.springframework.org/schema/tx/spring-tx.xsd
	http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context.xsd
    http://www.springframework.org/schema/beans 
    http://www.springframework.org/schema/beans/spring-beans.xsd
    http://www.springframework.org/schema/cache 
    http://www.springframework.org/schema/cache/spring-cache.xsd
    "
	default-autowire="byType">

	<context:annotation-config />
	<!-- <context:component-scan base-package="com.dzwy"> <context:exclude-filter 
		type="annotation" expression="org.springframework.stereotype.Repository"/> 
		</context:component-scan> -->
	<task:annotation-driven />

	<context:component-scan base-package="com.springmvc" />
	<!-- hibernate -->
	<!-- 将多个配置文件读取到容器中，交给Spring管理 -->  
    <bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">  
        <property name="locations">  
           <list>  
         <!--      <value>classpath:mysql_conf.properties</value>   -->
              <value>classpath:mysql_conf.properties</value>  
            </list>  
        </property>  
    </bean>  
    
      
	<!-- 数据源 -->
	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource"
		destroy-method="close">
		<property name="driverClassName" value="${jdbc.driver}" />
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
		<!-- <property value="stat" name="filters"></property> -->

		<property value="20" name="maxActive" />
		<property value="1" name="initialSize" />
		<property value="60000" name="maxWait" />
		<property value="1" name="minIdle" />

	<!-- 	<property value="60000" name="timeBetweenEvictionRunsMillis" />
		<property value="300000" name="minEvictableIdleTimeMillis" />
		<property value="SELECT 'x'" name="validationQuery" />
		<property value="true" name="testWhileIdle" />
		<property value="false" name="testOnBorrow" />
		<property value="false" name="testOnReturn" />
		<property value="true" name="poolPreparedStatements" />
		<property value="20" name="maxPoolPreparedStatementPerConnectionSize" /> -->
	</bean>


	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="packagesToScan">
			<list>
				<value>com.springmvc.po</value>

			</list>
		</property>
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.hbm2ddl.auto">update</prop>
				<prop key="hibernate.dialect">org.hibernate.dialect.MySQL5Dialect</prop>
				<prop key="hibernate.show_sql">true</prop>
				<prop key="hibernate.format_sql">true</prop>
				<!--<prop key="hibernate.current_session_context_class">thread</prop>-->
			</props>
		</property>
	</bean>
	<!--如果使用hibernate sessionFactory那么就用这个-->
	<bean id="transactionManager"
		class="org.springframework.orm.hibernate5.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>

	
   <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">  
        <property name="dataSource" ref="dataSource" />  
    </bean> 

   <!-- 配置事务管理 如果是使用jdbc 那么就用这个配置-->
    <!--<bean id="transactionManager"  -->
        <!--class="org.springframework.jdbc.datasource.DataSourceTransactionManager">  -->
        <!--<property name="dataSource" ref="dataSource" />  -->
    <!--</bean> -->

	<tx:annotation-driven transaction-manager="transactionManager" />
	
	<!-- redis 连接 -->
	<!-- <bean id="redisDao" class="com.lyc.db.redis.dao.RedisDao"></bean> -->
	<!-- redis 连接 -->
	<!-- <bean id="shardedJedisPool" class="com.lyc.db.redis.utils.MyShardedJedisPool"
		factory-method="getJedisPool" />
	<bean class="com.lyc.db.redis.dao.RedisDao">
		<property name="jedisPool" ref="shardedJedisPool" />
	</bean> -->
	<!-- 配置异步事件 -->
<!-- 	<bean id="applicationEventMulticaster"
		class="org.springframework.context.event.SimpleApplicationEventMulticaster">
		<property name="taskExecutor">
			<bean class="java.util.concurrent.Executors" factory-method="newSingleThreadExecutor"></bean>
		</property>
	</bean>
	 -->
</beans>
